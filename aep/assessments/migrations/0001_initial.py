# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-01-08 21:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0021_auto_20170105_2157'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clas_E',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_wru', models.CharField(blank=True, max_length=8, unique=True)),
                ('test_date', models.DateField()),
                ('form', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1)),
                ('read_level', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1)),
                ('read_ss', models.PositiveSmallIntegerField()),
                ('read_nrs', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'verbose_name_plural': 'CLAS-Es',
                'verbose_name': 'CLAS-E',
            },
        ),
        migrations.CreateModel(
            name='Clas_E_Loc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_wru', models.CharField(blank=True, max_length=8, unique=True)),
                ('test_date', models.DateField()),
                ('read', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'CLAS-E Locators',
                'verbose_name': 'CLAS-E Locator',
            },
        ),
        migrations.CreateModel(
            name='HiSet_Practice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_wru', models.CharField(blank=True, max_length=8, unique=True)),
                ('test_date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'HiSET Practice tests',
                'verbose_name': 'HiSET Practice',
            },
        ),
        migrations.CreateModel(
            name='Tabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_wru', models.CharField(blank=True, max_length=8, unique=True)),
                ('test_date', models.DateField()),
                ('form', models.CharField(choices=[('9', '9'), ('10', '10')], max_length=2)),
                ('read_level', models.CharField(choices=[('A', 'A'), ('D', 'D'), ('M', 'M'), ('E', 'E')], max_length=1)),
                ('math_level', models.CharField(choices=[('A', 'A'), ('D', 'D'), ('M', 'M'), ('E', 'E')], max_length=1)),
                ('lang_level', models.CharField(choices=[('A', 'A'), ('D', 'D'), ('M', 'M'), ('E', 'E')], max_length=1)),
                ('read_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('math_comp_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('app_math_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lang_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_math_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_batt_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('read_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('math_comp_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('app_math_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('lang_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_math_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_batt_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('read_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('math_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('lang_nrs', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'verbose_name_plural': 'TABEs',
                'verbose_name': 'TABE',
            },
        ),
        migrations.CreateModel(
            name='Tabe_Loc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_wru', models.CharField(blank=True, max_length=8, unique=True)),
                ('test_date', models.DateField()),
                ('read', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('math_comp', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('app_math', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lang', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('composite', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'TABE Locators',
                'verbose_name': 'TABE Locator',
            },
        ),
        migrations.CreateModel(
            name='TestAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'TestAppointments',
                'verbose_name': 'TestAppointment',
            },
        ),
        migrations.CreateModel(
            name='TestEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.CharField(choices=[('TABE', 'TABE Test'), ('TABE Locator', 'TABE Locator'), ('CLAS-E', 'CLAS-E Test'), ('CLAS-E Locator', 'CLAS-E Locator'), ('HiSET Practice', 'HiSET Practice'), ('Exit Exam', 'Exit Exam')], max_length=20)),
                ('seats', models.PositiveSmallIntegerField()),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('proctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Tests', to='people.Staff')),
            ],
            options={
                'verbose_name_plural': 'TestEvents',
                'verbose_name': 'TestEvent',
            },
        ),
        migrations.CreateModel(
            name='TestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_pretest', models.BooleanField(default=False)),
                ('last_test', models.DateField(blank=True, null=True)),
                ('hours', models.PositiveSmallIntegerField(default=0)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='people.Student')),
            ],
            options={
                'verbose_name_plural': 'Testing Histories',
                'verbose_name': 'Test History',
            },
        ),
        migrations.AddField(
            model_name='testappointment',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testers', to='assessments.TestEvent'),
        ),
        migrations.AddField(
            model_name='testappointment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_appointments', to='people.Student'),
        ),
        migrations.AddField(
            model_name='tabe_loc',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabe_loc_tests', to='assessments.TestHistory'),
        ),
        migrations.AddField(
            model_name='tabe',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabe_tests', to='assessments.TestHistory'),
        ),
        migrations.AddField(
            model_name='hiset_practice',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hiset_practice_tests', to='assessments.TestHistory'),
        ),
        migrations.AddField(
            model_name='clas_e_loc',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clas_e_loc_tests', to='assessments.TestHistory'),
        ),
        migrations.AddField(
            model_name='clas_e',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clas_e_tests', to='assessments.TestHistory'),
        ),
    ]
