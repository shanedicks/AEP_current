# Generated by Django 5.1.2 on 2024-10-29 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0002_initial'),
        ('sections', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TestEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.CharField(choices=[('TABE', 'TABE Test'), ('TABE Locator', 'TABE Locator'), ('CLAS-E', 'CLAS-E Test'), ('CLAS-E Locator', 'CLAS-E Locator'), ('Orientation', 'In Person Program Orientation'), ('Closed Orientaion', 'eOO and ELLOO Google Classroom Orientation'), ('Online Orientation', 'Online Program Orientation'), ('Email Update', 'Email Update'), ('HiSET Practice', 'HiSET Practice'), ('Exit Exam', 'Exit Exam')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=60)),
                ('seats', models.PositiveSmallIntegerField()),
                ('start', models.DateTimeField()),
                ('room', models.CharField(blank=True, max_length=60)),
                ('end', models.DateTimeField()),
                ('full', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('proctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Tests', to='people.staff')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='sections.site')),
            ],
            options={
                'verbose_name': 'Test Event',
                'verbose_name_plural': 'Test Events',
                'ordering': ['-start'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('message', models.CharField(max_length=160)),
                ('sent', models.DateTimeField(blank=True, null=True)),
                ('events', models.ManyToManyField(to='assessments.testevent')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='TestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_wru', models.CharField(blank=True, max_length=8)),
                ('last_test_date', models.DateField(blank=True, null=True)),
                ('last_test_type', models.CharField(blank=True, default='No Test', max_length=20)),
                ('test_assignment', models.CharField(blank=True, max_length=10)),
                ('hiset_authorization_form', models.CharField(blank=True, max_length=50)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='people.student')),
            ],
            options={
                'verbose_name': 'Test History',
                'verbose_name_plural': 'Testing Histories',
            },
        ),
        migrations.CreateModel(
            name='Tabe_Loc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('reported', models.BooleanField(default=False)),
                ('score_report_link', models.URLField(blank=True)),
                ('score_report_sent', models.BooleanField(default=False)),
                ('read', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('math_comp', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('app_math', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lang', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('composite', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'TABE Locator',
                'verbose_name_plural': 'TABE Locators',
            },
        ),
        migrations.CreateModel(
            name='HiSet_Practice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('subject', models.CharField(choices=[('Math', 'Math'), ('Reading', 'Reading'), ('Science', 'Science'), ('Social Studies', 'Social Studies'), ('Writing', 'Writing'), ('Essay', 'Essay')], max_length=14)),
                ('grade', models.CharField(choices=[('Not yet prepared', 'Not yet prepared'), ('Somewhat prepared', 'Somewhat prepared'), ('Prepared', 'Prepared'), ('Well Prepared', 'Well Prepared')], max_length=17)),
                ('test_version', models.CharField(blank=True, choices=[('FPT2', 'Free Practice Test 2 (2015)'), ('FPT3', 'Free Practice Test 3 (2015)'), ('PPT2', 'Paid Practice Test 2 (2015)'), ('PPT3', 'Paid Practice Test 3 (2015)'), ('PPT4', 'Paid Practice Test 4 (2015)'), ('PPT5', 'Paid Practice Test 5 (2015)'), ('OPT2', 'Official Practice Test 2 (2015)'), ('OPT3', 'Official Practice Test 3 (2015)'), ('FPT6A', 'Free Practice Test 6A (2016)'), ('PPT6A', 'Paid Practice Test 6A (2016)'), ('OPT6A', 'Official Practice Test 6A (2016)'), ('FPT7', 'Free Practice Test 7 (2017)'), ('OPT7', 'Official Practice Test 7 (2017)'), ('OPT8', 'Official Practice Test 8 (2018)'), ('OPT9', 'Official Practice Test 9 (2019)'), ('OPT10', 'Official Practice Test 10 (2020)'), ('OPT11', 'Official Practice Test 11 (2021)'), ('OPT12', 'Official Practice Test 12 (2022)'), ('OPT13', 'Official Practice Test 13 (2023)')], max_length=5)),
                ('proctor', models.CharField(choices=[('Staff', 'Proctored by Staff Member'), ('Self', 'Self-Administered')], default='Staff', max_length=5)),
                ('score', models.PositiveSmallIntegerField()),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hpt_submissions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'HiSET Practice',
                'verbose_name_plural': 'HiSET Practice scores',
            },
        ),
        migrations.CreateModel(
            name='HiSET',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('subject', models.CharField(choices=[('Math', 'Math'), ('Reading', 'Reading'), ('Science', 'Science'), ('Social Studies', 'Social Studies'), ('Writing', 'Writing'), ('Essay', 'Essay')], max_length=14)),
                ('score', models.PositiveSmallIntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'Official HiSET',
                'verbose_name_plural': 'Official HiSET scores',
            },
        ),
        migrations.CreateModel(
            name='Gain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('reported', models.BooleanField(default=False)),
                ('score_report_link', models.URLField(blank=True)),
                ('score_report_sent', models.BooleanField(default=False)),
                ('form', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1)),
                ('subject', models.CharField(choices=[('Math', 'Math'), ('English', 'English')], max_length=7)),
                ('scale_score', models.PositiveSmallIntegerField()),
                ('grade_eq', models.DecimalField(decimal_places=1, max_digits=3)),
                ('nrs', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=1)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'GAIN',
                'verbose_name_plural': 'GAIN Scores',
            },
        ),
        migrations.CreateModel(
            name='Clas_E_Loc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('reported', models.BooleanField(default=False)),
                ('score_report_link', models.URLField(blank=True)),
                ('score_report_sent', models.BooleanField(default=False)),
                ('read', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'CLAS-E Locator',
                'verbose_name_plural': 'CLAS-E Locators',
            },
        ),
        migrations.CreateModel(
            name='Accuplacer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('reading', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('writing', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quantitative', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('functions', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('eng_placement', models.CharField(blank=True, max_length=100, null=True)),
                ('math_placement', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('attendance_type', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('X', '-----')], default='X', max_length=1)),
                ('attendance_date', models.DateField(blank=True, null=True)),
                ('time_in', models.TimeField(blank=True, null=True)),
                ('time_out', models.TimeField(blank=True, null=True)),
                ('att_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_appointments', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_appointments', to='people.student')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='assessments.testevent')),
            ],
            options={
                'verbose_name': 'Testing Appointment',
                'verbose_name_plural': 'Testing Appointments',
                'unique_together': {('student', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Tabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('reported', models.BooleanField(default=False)),
                ('score_report_link', models.URLField(blank=True)),
                ('score_report_sent', models.BooleanField(default=False)),
                ('form', models.CharField(choices=[('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], max_length=2)),
                ('read_level', models.CharField(blank=True, choices=[('A', 'A'), ('D', 'D'), ('M', 'M'), ('E', 'E'), ('L', 'L')], max_length=1)),
                ('math_level', models.CharField(blank=True, choices=[('A', 'A'), ('D', 'D'), ('M', 'M'), ('E', 'E'), ('L', 'L')], max_length=1)),
                ('lang_level', models.CharField(blank=True, choices=[('A', 'A'), ('D', 'D'), ('M', 'M'), ('E', 'E'), ('L', 'L')], max_length=1)),
                ('read_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('math_comp_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('app_math_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lang_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_math_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('total_batt_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('read_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('math_comp_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('app_math_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('lang_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_math_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_batt_ge', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('read_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('math_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('lang_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'TABE',
                'verbose_name_plural': 'TABE scores',
                'unique_together': {('student', 'test_date', 'form', 'read_level', 'math_level', 'lang_level', 'read_nrs', 'math_nrs', 'lang_nrs')},
            },
        ),
        migrations.CreateModel(
            name='Clas_E',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('reported', models.BooleanField(default=False)),
                ('score_report_link', models.URLField(blank=True)),
                ('score_report_sent', models.BooleanField(default=False)),
                ('form', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1)),
                ('read_level', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1)),
                ('read_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('read_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('write_level', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1)),
                ('write_ss', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('write_nrs', models.CharField(blank=True, max_length=1, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_tests', to='assessments.testhistory')),
            ],
            options={
                'verbose_name': 'CLAS-E',
                'verbose_name_plural': 'CLAS-E scores',
                'unique_together': {('student', 'test_date', 'form', 'read_level', 'read_nrs')},
            },
        ),
    ]
